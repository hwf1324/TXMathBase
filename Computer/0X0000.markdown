# 作为工程的计算机

很多大学的计算机专业叫做“计算机科学与技术”或者“计算机技术”，但是就目前实际情况来说，说一个人从事“计算机相关行业”，其实很大概率是在说他或她（以后一律简称“他”）在做计算机工程。因而，今天的正名从计算机是科学技术还是工程说起。

计算机是一种机器，但这种机器非常特殊，它不加工有形的物质，而是处理无形的数据。它的发展历程也和其他机器不太一样，很多机器都是现有工程需求然后设计研发，不断提出的工程需求进而催生出对应的理论研究。但计算机是先完成的理论研究，然后再逐步实现出来的。而且计算机所依赖的理论也和一般机器不同，那些生产实物的机器所依赖的原理不是物理就是化学，而计算机的理论依据本质是数学，为了实现这个数学上的抽象机器，才用到了电子、半导体、材料等物理和化学学科。

因此，计算机首先是一门数学，其核心就是数理逻辑的递归论，研究可计算问题。为了打造更为高效可靠的计算机以及让计算机运算更多的东西，进而涉及到组合学、图论、代数学、概率论、统计学等数学分支。

其次，数学上的理论计算机需要被实现出来才能使用。在实现计算机的过程中运用到包括物理和化学在内的诸多自然科学，但这些自然科学只是为计算机提供基础，而不研究计算机本身。而关于如何实现计算机的研究，很大程度上是一个工程课题。

最终，使用计算机来计算任何可计算的、你想计算的东西，也是工程课题。这也就是说，从定制计算机硬件到工具软件开发，再到应用计算机软硬件，实际上都是工程问题。

总结一下，除了理论计算机研究的部分，实际上计算机大部分算一个工程学科。既然是工程学科，就应当遵循工程学科的一般规律。在我看来，工程学科和理论学科的最大不同就在于妥协。工程学科需要向生产和制造成本妥协，需要向已有的规范和习惯妥协，不同的生产和研究团体之间需要妥协，甚至往往连研发成本都是妥协中的筹码。明白了这一点，才能有一个正确的心态来学计算机。例如纠结C语言的`++i++`就是一个典型的在该妥协的地方不妥协而产生的一个不太需要解决的问题。这种写法本身就是一个无人关注的，完全可以避开的混淆写法，非要钻研进去就会发现，这个混淆无非就是别人的妥协造成的。从多加几个括号到换一门语言，处理这个问题的方法有很多（注意是“处理”而非解决），为什么就不跟自己妥协呢。

反正我跟自己妥协了。 我之前尝试过无数次系统地学习计算机，并尝试将学到的东西系统地写出来。问题就在于我的时间和精力不是无穷无尽的，要么就是写一小部分很少但是很精的东西，要么就是写一些涉猎很广但是很泛的东西。对于计算机这么一个容易变化且大部分都是工程课题的领域来说，消耗大量时间精力写一小部分精当的东西明显是不合算的，因为有可能没等写完，很多内容就发生变化了。因而，我选择写一些涉猎很广但是相对宽泛的东西。目前我想到的一个比较好的形式就是书荐加书评的形式。作为一个开头，我这一期推荐的书是：

*Petzold, C.* (2000). **Code: The Hidden Language of Computer Hardware and Software**

它的中文译名是“编码的奥秘”，这是一本介绍计算机的科普性读物。我认为国内很多人学计算机的最大误区，就是从一门具体的编程语言开始。如果你对于计算机的一些基本概念没有足够的了解，实际上你连编程语言中的基本概念都搞不明白，借由学语言去学计算机就是本末倒置。因此，我推荐所有计划学第一门编程语言的人先把手头的“XX天学会YY语言”放一放，先读一读这本科普读物。看完这个再去学编程语言，会让你感觉轻松很多。

